// Copyright 2020 SIX AFTER, LLC (SIX AFTER)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package types;
option go_package="github.com/sixafter/types;types";

option cc_enable_arenas = true;
option java_package = "com.sixafter.types";
option java_multiple_files = true;
option java_outer_classname = "GeospatialElevationProto";
option objc_class_prefix = "TYP";

// The vertical direction, between a reference datum and a point or object.
message GeospatialElevation {
  // A reference system or an approximation of the Earth's surface against
  // which positional measurements are made for computing locations.
  enum GeodeticDatum {
    // The altitude above mean sea level associated with a location, measured in meters.
    SEA_LEVEL = 0;
    // The altitude as a height above the World Geodetic System 1984 (WGS84) ellipsoid, measured in meters.
    WGS_84 = 1;
  }

  // A reference point.
  GeodeticDatum datum = 1;

  // The positive or negative vertical elevation in relation to the datum.
  float altitude = 2;
}
