// Copyright 2020-2024 SIX AFTER, INC (SIX AFTER)
//
// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: SIX AFTER, INC (SIX AFTER)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: temporal_range.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The `TemporalRange` message represents a time range defined by a starting
// reference point (epoch) and a duration. It is commonly used in time-based
// applications such as scheduling, analytics, and temporal data analysis.
type TemporalRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The starting point of the temporal range, known as the epoch.
	// This timestamp serves as the reference point from which the duration is
	// measured.
	// Example: "2024-11-17T00:00:00Z" for a midnight reference point in UTC.
	Epoch *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// The duration of the temporal range, measured as the time span from the
	// epoch. This represents the length of the time range.
	// Example: A duration of `3600 seconds` (1 hour) indicates a range lasting
	// one hour from the epoch.
	Duration      *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemporalRange) Reset() {
	*x = TemporalRange{}
	mi := &file_temporal_range_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemporalRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemporalRange) ProtoMessage() {}

func (x *TemporalRange) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_range_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemporalRange.ProtoReflect.Descriptor instead.
func (*TemporalRange) Descriptor() ([]byte, []int) {
	return file_temporal_range_proto_rawDescGZIP(), []int{0}
}

func (x *TemporalRange) GetEpoch() *timestamppb.Timestamp {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *TemporalRange) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_temporal_range_proto protoreflect.FileDescriptor

const file_temporal_range_proto_rawDesc = "" +
	"\n" +
	"\x14temporal_range.proto\x12\x0esixafter.types\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"x\n" +
	"\rTemporalRange\x120\n" +
	"\x05epoch\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05epoch\x125\n" +
	"\bduration\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\bdurationBt\n" +
	"\x12com.sixafter.typesB\x12TemporalRangeProtoP\x01Z\x1fgithub.com/sixafter/types;types\xf8\x01\x01\xa2\x02\x03TPB\xaa\x02\x1dSixAfter.Types.WellKnownTypesb\x06proto3"

var (
	file_temporal_range_proto_rawDescOnce sync.Once
	file_temporal_range_proto_rawDescData []byte
)

func file_temporal_range_proto_rawDescGZIP() []byte {
	file_temporal_range_proto_rawDescOnce.Do(func() {
		file_temporal_range_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_range_proto_rawDesc), len(file_temporal_range_proto_rawDesc)))
	})
	return file_temporal_range_proto_rawDescData
}

var file_temporal_range_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_temporal_range_proto_goTypes = []any{
	(*TemporalRange)(nil),         // 0: sixafter.types.TemporalRange
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 2: google.protobuf.Duration
}
var file_temporal_range_proto_depIdxs = []int32{
	1, // 0: sixafter.types.TemporalRange.epoch:type_name -> google.protobuf.Timestamp
	2, // 1: sixafter.types.TemporalRange.duration:type_name -> google.protobuf.Duration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_temporal_range_proto_init() }
func file_temporal_range_proto_init() {
	if File_temporal_range_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_range_proto_rawDesc), len(file_temporal_range_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_range_proto_goTypes,
		DependencyIndexes: file_temporal_range_proto_depIdxs,
		MessageInfos:      file_temporal_range_proto_msgTypes,
	}.Build()
	File_temporal_range_proto = out.File
	file_temporal_range_proto_goTypes = nil
	file_temporal_range_proto_depIdxs = nil
}
