// Copyright 2020-2024 SIX AFTER, INC (SIX AFTER)
//
// SPDX-License-Identifier: Apache-2.0
// SPDX-FileCopyrightText: SIX AFTER, INC (SIX AFTER)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: geospatial_elevation.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The `GeodeticDatum` enum defines the reference system or surface
// against which the elevation is measured. These reference systems are
// approximations of the Earth's surface.
type GeospatialElevation_GeodeticDatum int32

const (
	// The altitude above mean sea level (MSL), measured in meters.
	// This is a commonly used datum for everyday elevation measurements.
	GeospatialElevation_SEA_LEVEL GeospatialElevation_GeodeticDatum = 0
	// The altitude as a height above the World Geodetic System 1984 (WGS84)
	// ellipsoid, measured in meters. This is commonly used in GPS systems.
	GeospatialElevation_WGS_84 GeospatialElevation_GeodeticDatum = 1
)

// Enum value maps for GeospatialElevation_GeodeticDatum.
var (
	GeospatialElevation_GeodeticDatum_name = map[int32]string{
		0: "SEA_LEVEL",
		1: "WGS_84",
	}
	GeospatialElevation_GeodeticDatum_value = map[string]int32{
		"SEA_LEVEL": 0,
		"WGS_84":    1,
	}
)

func (x GeospatialElevation_GeodeticDatum) Enum() *GeospatialElevation_GeodeticDatum {
	p := new(GeospatialElevation_GeodeticDatum)
	*p = x
	return p
}

func (x GeospatialElevation_GeodeticDatum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeospatialElevation_GeodeticDatum) Descriptor() protoreflect.EnumDescriptor {
	return file_geospatial_elevation_proto_enumTypes[0].Descriptor()
}

func (GeospatialElevation_GeodeticDatum) Type() protoreflect.EnumType {
	return &file_geospatial_elevation_proto_enumTypes[0]
}

func (x GeospatialElevation_GeodeticDatum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeospatialElevation_GeodeticDatum.Descriptor instead.
func (GeospatialElevation_GeodeticDatum) EnumDescriptor() ([]byte, []int) {
	return file_geospatial_elevation_proto_rawDescGZIP(), []int{0, 0}
}

// The `GeospatialElevation` message represents the vertical direction
// or height of a point relative to a specified reference datum. This
// is commonly used in geolocation, mapping, and geographic information systems (GIS).
type GeospatialElevation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The geodetic datum used as the reference point for the elevation measurement.
	// Example: `SEA_LEVEL` for altitude above mean sea level.
	Datum GeospatialElevation_GeodeticDatum `protobuf:"varint,1,opt,name=datum,proto3,enum=sixafter.types.GeospatialElevation_GeodeticDatum" json:"datum,omitempty"`
	// The altitude or vertical elevation of the point, measured in meters.
	// This value can be positive (above the datum) or negative (below the datum).
	// Example: An altitude of 212 meters above sea level for Westlake, Texas.
	Altitude      float64 `protobuf:"fixed64,2,opt,name=altitude,proto3" json:"altitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeospatialElevation) Reset() {
	*x = GeospatialElevation{}
	mi := &file_geospatial_elevation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeospatialElevation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeospatialElevation) ProtoMessage() {}

func (x *GeospatialElevation) ProtoReflect() protoreflect.Message {
	mi := &file_geospatial_elevation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeospatialElevation.ProtoReflect.Descriptor instead.
func (*GeospatialElevation) Descriptor() ([]byte, []int) {
	return file_geospatial_elevation_proto_rawDescGZIP(), []int{0}
}

func (x *GeospatialElevation) GetDatum() GeospatialElevation_GeodeticDatum {
	if x != nil {
		return x.Datum
	}
	return GeospatialElevation_SEA_LEVEL
}

func (x *GeospatialElevation) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

var File_geospatial_elevation_proto protoreflect.FileDescriptor

const file_geospatial_elevation_proto_rawDesc = "" +
	"\n" +
	"\x1ageospatial_elevation.proto\x12\x0esixafter.types\"\xa6\x01\n" +
	"\x13GeospatialElevation\x12G\n" +
	"\x05datum\x18\x01 \x01(\x0e21.sixafter.types.GeospatialElevation.GeodeticDatumR\x05datum\x12\x1a\n" +
	"\baltitude\x18\x02 \x01(\x01R\baltitude\"*\n" +
	"\rGeodeticDatum\x12\r\n" +
	"\tSEA_LEVEL\x10\x00\x12\n" +
	"\n" +
	"\x06WGS_84\x10\x01Bz\n" +
	"\x12com.sixafter.typesB\x18GeospatialElevationProtoP\x01Z\x1fgithub.com/sixafter/types;types\xf8\x01\x01\xa2\x02\x03TPB\xaa\x02\x1dSixAfter.Types.WellKnownTypesb\x06proto3"

var (
	file_geospatial_elevation_proto_rawDescOnce sync.Once
	file_geospatial_elevation_proto_rawDescData []byte
)

func file_geospatial_elevation_proto_rawDescGZIP() []byte {
	file_geospatial_elevation_proto_rawDescOnce.Do(func() {
		file_geospatial_elevation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_geospatial_elevation_proto_rawDesc), len(file_geospatial_elevation_proto_rawDesc)))
	})
	return file_geospatial_elevation_proto_rawDescData
}

var file_geospatial_elevation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_geospatial_elevation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_geospatial_elevation_proto_goTypes = []any{
	(GeospatialElevation_GeodeticDatum)(0), // 0: sixafter.types.GeospatialElevation.GeodeticDatum
	(*GeospatialElevation)(nil),            // 1: sixafter.types.GeospatialElevation
}
var file_geospatial_elevation_proto_depIdxs = []int32{
	0, // 0: sixafter.types.GeospatialElevation.datum:type_name -> sixafter.types.GeospatialElevation.GeodeticDatum
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_geospatial_elevation_proto_init() }
func file_geospatial_elevation_proto_init() {
	if File_geospatial_elevation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_geospatial_elevation_proto_rawDesc), len(file_geospatial_elevation_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_geospatial_elevation_proto_goTypes,
		DependencyIndexes: file_geospatial_elevation_proto_depIdxs,
		EnumInfos:         file_geospatial_elevation_proto_enumTypes,
		MessageInfos:      file_geospatial_elevation_proto_msgTypes,
	}.Build()
	File_geospatial_elevation_proto = out.File
	file_geospatial_elevation_proto_goTypes = nil
	file_geospatial_elevation_proto_depIdxs = nil
}
